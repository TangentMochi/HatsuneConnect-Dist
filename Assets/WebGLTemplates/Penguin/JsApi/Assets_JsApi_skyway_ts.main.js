"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkpack_system"] = self["webpackChunkpack_system"] || []).push([["Assets_JsApi_skyway_ts"],{

/***/ "./Assets/JsApi/skyway.ts":
/*!********************************!*\
  !*** ./Assets/JsApi/skyway.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   changeJoin: () => (/* binding */ changeJoin),\n/* harmony export */   changeMember: () => (/* binding */ changeMember),\n/* harmony export */   closeRoom: () => (/* binding */ closeRoom),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   createHost: () => (/* binding */ createHost),\n/* harmony export */   createStream: () => (/* binding */ createStream),\n/* harmony export */   onPublished: () => (/* binding */ onPublished),\n/* harmony export */   recreateToken: () => (/* binding */ recreateToken),\n/* harmony export */   requestToken: () => (/* binding */ requestToken),\n/* harmony export */   room: () => (/* binding */ room),\n/* harmony export */   writeStream: () => (/* binding */ writeStream)\n/* harmony export */ });\n/* harmony import */ var _skyway_sdk_room__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @skyway-sdk/room */ \"./node_modules/@skyway-sdk/room/dist/index.mjs\");\n/* harmony import */ var _unity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./unity */ \"./Assets/JsApi/unity.ts\");\n\r\n\r\nconst changeMemberMethod = \"changeMember\";\r\nconst closeRoomMethod = \"onClose\";\r\nconst retryRoomMethod = \"retryRoomName\";\r\nconst requestTokenMethod = \"requestToken\";\r\nconst connectMethod = \"onConnect\";\r\nconst onDataMethod = \"onData\";\r\nvar stream_data;\r\nvar room;\r\nvar me;\r\nlet skyway_context;\r\nlet member_count = 1;\r\nlet is_host = false;\r\nlet join_mode = true;\r\nfunction createHost(token, room_name) {\r\n    console.log(\"room_name: %s\", room_name);\r\n    createStream();\r\n    is_host = true;\r\n    member_count = 1;\r\n    _skyway_sdk_room__WEBPACK_IMPORTED_MODULE_0__.SkyWayContext.Create(token).then(context => {\r\n        skyway_context = context;\r\n        skyway_context.onTokenUpdateReminder.add(requestToken);\r\n        try {\r\n            let tmp = _skyway_sdk_room__WEBPACK_IMPORTED_MODULE_0__.SkyWayRoom.Find(skyway_context, {\r\n                name: room_name\r\n            }, \"p2p\");\r\n            if (tmp) {\r\n                console.warn(\"Room already exists\");\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(\"Room not exist\");\r\n        }\r\n        _skyway_sdk_room__WEBPACK_IMPORTED_MODULE_0__.SkyWayRoom.FindOrCreate(skyway_context, {\r\n            type: \"p2p\",\r\n            name: room_name,\r\n        }).then(r => {\r\n            room = r;\r\n            window.room = room;\r\n            room.join().then(user => {\r\n                me = user;\r\n                me.publish(stream_data);\r\n                (0,_unity__WEBPACK_IMPORTED_MODULE_1__.sendMessage)(connectMethod, me.id);\r\n                room.publications.forEach(onPublished);\r\n                room.onClosed.add(() => (0,_unity__WEBPACK_IMPORTED_MODULE_1__.sendMessage)(closeRoomMethod));\r\n                room.onMemberJoined.add((joinMember) => {\r\n                    member_count++;\r\n                    if (5 < member_count || !join_mode) {\r\n                        joinMember.member.leave();\r\n                    }\r\n                    else {\r\n                        changeMember(room.members, me.id);\r\n                    }\r\n                });\r\n                room.onMemberLeft.add((leftMember) => {\r\n                    member_count--;\r\n                    changeMember(room.members, me.id);\r\n                });\r\n                room.onStreamPublished.add((e) => onPublished(e.publication));\r\n            });\r\n        });\r\n    });\r\n}\r\nfunction createClient(token, room_name) {\r\n    console.log(\"room_name: %s\", room_name);\r\n    createStream();\r\n    is_host = false;\r\n    _skyway_sdk_room__WEBPACK_IMPORTED_MODULE_0__.SkyWayContext.Create(token).then(context => {\r\n        skyway_context = context;\r\n        skyway_context.onTokenUpdateReminder.add(requestToken);\r\n        _skyway_sdk_room__WEBPACK_IMPORTED_MODULE_0__.SkyWayRoom.Find(skyway_context, {\r\n            name: room_name,\r\n        }, \"p2p\").then(r => {\r\n            room = r;\r\n            window.room = room;\r\n            room.join().then(user => {\r\n                me = user;\r\n                me.publish(stream_data);\r\n                changeMember(room.members, me.id);\r\n                room.onMemberJoined.add((joinMember) => {\r\n                    member_count++;\r\n                    changeMember(room.members, me.id);\r\n                });\r\n                room.onMemberLeft.add((leftMember) => {\r\n                    member_count--;\r\n                    changeMember(room.members, me.id);\r\n                });\r\n                room.publications.forEach(onPublished);\r\n                room.onClosed.add(() => (0,_unity__WEBPACK_IMPORTED_MODULE_1__.sendMessage)(closeRoomMethod));\r\n                room.onStreamPublished.add((e) => onPublished(e.publication));\r\n            }).catch(() => {\r\n            });\r\n        });\r\n    });\r\n}\r\nfunction onPublished(publication) {\r\n    if (publication.publisher.id === me.id)\r\n        return;\r\n    me.subscribe(publication.id).then((stream) => {\r\n        if (stream.stream.contentType == \"data\") {\r\n            stream.stream.onData.add((data) => {\r\n                let from_id = publication.publisher.id;\r\n                (0,_unity__WEBPACK_IMPORTED_MODULE_1__.sendMessage)(onDataMethod, `${from_id};${data.toString()}`);\r\n            });\r\n        }\r\n    });\r\n}\r\nfunction changeMember(members, meId) {\r\n    let sendData = \"\";\r\n    for (const member of members) {\r\n        if (member.id != meId) {\r\n            sendData = member.id + \";\";\r\n        }\r\n    }\r\n    (0,_unity__WEBPACK_IMPORTED_MODULE_1__.sendMessage)(changeMemberMethod, sendData);\r\n}\r\nfunction createStream() {\r\n    _skyway_sdk_room__WEBPACK_IMPORTED_MODULE_0__.SkyWayStreamFactory.createDataStream().then(data => {\r\n        stream_data = data;\r\n    });\r\n}\r\nfunction writeStream(message) {\r\n    stream_data.write(message);\r\n}\r\nfunction requestToken() {\r\n    (0,_unity__WEBPACK_IMPORTED_MODULE_1__.sendMessage)(requestTokenMethod);\r\n}\r\nfunction recreateToken(token) {\r\n    skyway_context.updateAuthToken(token);\r\n}\r\nfunction changeJoin(mode) {\r\n    console.log(mode);\r\n    join_mode = mode;\r\n}\r\nfunction closeRoom() {\r\n    room.close();\r\n}\r\nwindow.createHost = createHost;\r\nwindow.createClient = createClient;\r\nwindow.writeStream = writeStream;\r\nwindow.recreateToken = recreateToken;\r\nwindow.changeJoin = changeJoin;\r\nwindow.closeRoom = closeRoom;\r\nwindow.room = room;\r\n\n\n//# sourceURL=webpack://pack_system/./Assets/JsApi/skyway.ts?");

/***/ })

}]);